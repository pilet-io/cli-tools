#!/bin/bash

#> [cluster]=$DEF_CLUSTER [nodes]=3 [type]=r5.xlarge [version]=1.25 [region]=$DEF_REGION

FOLDER=~/.config/aws/kube/$CLUSTER
mkdir -p $FOLDER
CONFIG_FILE=$FOLDER/eks-config.yaml

cat > $CONFIG_FILE <<EOF
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: $CLUSTER
  region: $REGION
  version: "$VERSION"

vpc:
  id: "vpc-0688ce5da7a4dab87"
  securityGroup: "sg-0f341ff3ee5742169"
  subnets:
    public:
      sub-1:
        id: subnet-00dfb5d4eb57622c2
      sub-2:
        id: subnet-0ca0520196b8ec79d
      sub-3:
        id: subnet-006813cdfc04d57b2
      sub-4:
        id: subnet-043aa521e5d151dcc

managedNodeGroups:
- name: ng-$CLUSTER
  instanceTypes: ["$TYPE"]
  spot: false
  minSize: $NODES
  maxSize: 7
EOF

echo "Creating with config file $CONFIG_FILE"
eksctl create cluster -f $CONFIG_FILE
echo "Install CSI driver"
eksctl utils associate-iam-oidc-provider --region=$REGION --cluster=$CLUSTER --approve
eksctl create iamserviceaccount --name ebs-csi-controller-sa --namespace kube-system --cluster $CLUSTER --role-name CSIDriverRole-$CLUSTER --role-only --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy --approve
eksctl create addon --name aws-ebs-csi-driver --cluster $CLUSTER --service-account-role-arn arn:aws:iam::204071211944:role/CSIDriverRole-$CLUSTER --force
